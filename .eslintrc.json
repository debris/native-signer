{
	"env": {
		"browser": true,
		"es6": true,
		"node": true
	},
	"extends": [
		"plugin:import/errors",
		"plugin:import/warnings",
		"plugin:import/typescript",
		"plugin:@typescript-eslint/eslint-recommended"
	],
	"globals": { "inTest": "writable" },
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"ecmaFeatures": {
			"jsx": true
		},
		"ecmaVersion": 6,
		"sourceType": "module"
	},
	"plugins": [
		"@typescript-eslint",
		"promise",
		"react",
		"react-hooks",
		"simple-import-sort",
		"sort-destructure-keys"
	],
	"rules": {
			"comma-dangle": ["error", "never"],
			"function-paren-newline": ["error", { "minItems": 8 }],
			"indent": ["error", "tab"],
			"quotes": ["error", "single", { "avoidEscape": true }],
			"newline-before-return": "error",
			"no-bitwise": "off",
			"no-multiple-empty-lines": ["error", {"max": 1}],
			"no-trailing-spaces": ["warn"],
			"no-unused-vars": ["error", { "args": "none" }],
			"object-curly-spacing": ["error", "always"],
			"object-curly-newline": ["error", {
				"ImportDeclaration": "never",
				"ObjectPattern": "never"
			  }],
			"padding-line-between-statements": [
			"error",
				{ "blankLine": "always", "prev": ["const", "let", "var"], "next": "*" },
				{ "blankLine": "any", "prev": ["const", "let", "var"], "next": ["const", "let", "var"] },
				{ "blankLine": "always", "prev": "*", "next": "block-like" },
				{ "blankLine": "always", "prev": "block-like", "next": "*" },
				{ "blankLine": "always", "prev": "*", "next": "function" },
				{ "blankLine": "always", "prev": "function", "next": "*" },
				{ "blankLine": "always", "prev": "*", "next": "try" },
				{ "blankLine": "always", "prev": "try", "next": "*" },
				{ "blankLine": "always", "prev": "*", "next": "return" },
				{ "blankLine": "always", "prev": "*", "next": "import" },
				{ "blankLine": "always", "prev": "import", "next": "*" },
				{ "blankLine": "any", "prev": "import", "next": "import" }
			],
			"react-hooks/rules-of-hooks": "error",
			"react-hooks/exhaustive-deps": "error",
			"react/jsx-fragments": "error",
			"react/jsx-max-props-per-line": [2, {
				"maximum": 1,
				"when": "always"
			}],
			"react/jsx-sort-props": [2, {
				"noSortAlphabetically": false
			}],
			"sort-destructure-keys/sort-destructure-keys": [2, {
			"caseSensitive": true
			}],
			"simple-import-sort/imports": [2, {
			"groups": [
				["^\u0000"], // all side-effects (0 at start)
				["\u0000$", "^@polkadot.*\u0000$", "^\\..*\u0000$"], // types (0 at end)
				["\u0000$", "^@.*\u0000$", "^\\..*\u0000$"], // types (0 at end)
				["^[^/\\.]"], // non-polkadot
				["^@polkadot"], // polkadot
				["^\\.\\.(?!/?$)", "^\\.\\./?$", "^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$"] // local (. last)
				]
			}],
			"sort-keys": "error",
		"semi": "off",
		"space-in-parens": ["error", "never"],
		"switch-colon-spacing": ["error", {"after": true, "before": false}]
	},
	"settings": {
		"import/ignore": "react-navigation",
		"import/resolver": {
			"node": {
				"extensions": [".js", ".jsx", ".ts", ".tsx"]
			},
			"typescript": {
				"alwaysTryTypes": true // always try to resolve types under `<roo/>@types` directory even it doesn"t contain any source code, like `@types/unist`
			}
		},
		"react": {
			"pragma": "React",
			"version": "detect"
		}
	}
}
